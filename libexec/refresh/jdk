#!/usr/bin/env zsh

basedir=$(dirname $0)/../..

source $basedir/etc/profile
source $ME_LIBEXEC_DIR/sh_functions

OPENJDK_REPO=https://github.com/adoptopenjdk

set -e

main () {
  hdr refreshing jdk
  local destdir=$ME_PLATFORM_TOOL_DIR
  install_version $destdir $ME_JDK8_VERSION
  install_version $destdir $ME_JDK11_VERSION
  install_version $destdir $ME_JDKLATEST_VERSION
  link_jdk $destdir/jdk $ME_JDK11_VERSION
  link_jdk $destdir/jdk-latest $ME_JDKLATEST_VERSION
}

install_version () {
  local destdir=$1
  local major=$(echo $2 | cut -d: -f1)
  local version=$(echo $2 | cut -d: -f2)
  local build=$(echo $2 | cut -d: -f3)
  local platform=
  case $ME_PLATFORM in
    linux-x64)
      platform=linux
      ;;
    osx-x64)
      # if [[ $major == 10 ]] || [[ $major == 9 ]]; then
        # msg "jdk $major not available for $ME_PLATFORM"
        # return
      # fi
      platform=mac
      ;;
    *)
      die "unsupported platform: $ME_PLATFORM"
      ;;
  esac
  msg "installing jdk $version"
  local distfile=
  local disturl=
  case $major in
    8)
      distfile=openjdk${major}u-jdk_x64_${platform}_hotspot_$(echo $version | tr -d '-').tar.gz
      disturl=${OPENJDK_REPO}/openjdk${major}-binaries/releases/download/jdk${version}/${distfile}
      ;;
    10)
      distfile=openjdk${major}_x64_${platform}_jdk-${version}.tar.gz
      disturl=${OPENJDK_REPO}/openjdk${major}-releases/releases/download/jdk-${version}/${distfile}
      ;;
    *)
      distfile=openjdk${major}u-jdk_x64_${platform}_hotspot_$(echo $version | tr '+' '_').tar.gz
      disturl=${OPENJDK_REPO}/openjdk${major}-binaries/releases/download/jdk-${version}/${distfile}
      ;;
  esac
  msg "fetching $disturl"
  echo 'actual: '$disturl
  wget --continue -P $ME_DISTFILE_DIR $disturl
  msg "extracting $distfile"
  mkdir -p $destdir
  rm -rf $destdir/jdk$version
  tar xzf $ME_DISTFILE_DIR/$distfile -C $destdir
  local link=${destdir}/jdk-${major}
  rm -f $link
  local jdk=jdk
  [[ $major != 8 ]] && jdk+='-'
  jdk+=${version}
  [[ $ME_PLATFORM == osx-x64 ]] && jdk+='/Contents/Home'
  ln -s $jdk $link
}

link_jdk () {
  local link=$1
  local major=jdk-$(echo $2 | cut -d: -f1)
  msg "linking $link to $major"
  rm -f $link
  ln -s $major $link
}

main $@
