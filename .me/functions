me() {
    env | grep ^ME | LC_ALL=C sort
}

reenv() {
    source ~/.zshrc
}

shlog() {
    local dirname
    [[ -x /bin/dirname ]] && dirname=/bin/dirname || dirname=/usr/bin/dirname
    /bin/mkdir -p $($dirname $ME_SHELL_LOG)
    printf "[$1] " >> $ME_SHELL_LOG
    shift
    printf "$*\n" >> $ME_SHELL_LOG
}

catlog() {
    cat $ME_SHELL_LOG
}

taillog() {
    tail -f $ME_SHELL_LOG
}

is_in_path() {
    if (( ${path[(i)${1}]} > ${#path} )) ; then
        return 1
    else
        return 0
    fi
}

append_path() {
    local trimmed=${1%/}
    [[ -d $trimmed/bin ]] && append_binpath $trimmed/bin
    [[ -d $trimmed/sbin ]] && append_binpath $trimmed/sbin
    [[ -d $trimmed/share/man ]] && append_manpath $trimmed/share/man
}

remove_path() {
    remove_binpath $1/bin
    remove_manpath $1/share/man
}

prepend_path() {
    [[ -d $1/bin ]] && prepend_binpath $1/bin
    [[ -d $1/sbin ]] && prepend_binpath $1/sbin
    [[ -d $1/share/man ]] && prepend_manpath $1/share/man
}

append_binpath() {
    remove_binpath $1
    shlog appending binpath $1
    path+=$1
}

prepend_binpath() {
    remove_binpath $1
    shlog prepending binpath $1
    path=($1 $path)
}

remove_binpath() {
    shlog removing binpath $1
    path=("${(@)path:#${1}}")
}

append_manpath() {
    remove_manpath $1
    shlog appending manpath $1
    if [[ -z $MANPATH ]] ; then
        manpath=($1)
    else
        manpath+=$1
    fi
}

prepend_manpath() {
    remove_manpath $1
    shlog prepending manpath $1
    if [[ -z $MANPATH ]] ; then
        manpath=($1)
    else
        manpath=($1 $manpath)
    fi
}

remove_manpath() {
    shlog removing manpath $1
    manpath=("${(@)manpath:#${1}}")
}

checkexe() {
    local exe=$1
    if ! which $exe > /dev/null 2>&1 ; then
        echo \'$exe\' command not found
        return 1
    fi
}

# vim: ft=zsh
