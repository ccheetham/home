#!/usr/bin/env bash

prog=$(basename $0)
source ~/libexec/sh_functions

usage() {
    echo
    echo "USAGE"
    echo "     $prog [-h] pattern [path...]"
    echo
    echo "WHERE"
    echo "     path    files and/or directories; default current directory"
    echo "     pattern"
    echo "             class pattern, e.g 'com.example.Main' or 'com.example'"
    echo
    echo "OPTIONS"
    echo "     -h      print this message"
    echo
}

while getopts ":h" opt ; do
    case $opt in
        h)
            usage
            exit
            ;;
        \?)
            echo "invalid option -$OPTARG" 2>&1
            echo "run with -h for help" 2>&1
            exit 1
            ;;
        :)
            echo "option -$OPTARG requires an argument" 2>&1
            echo "run with -h for help" 2>&1
            exit 1
            ;;
    esac
done
shift $(($OPTIND-1))

if [[ $# == 0 ]]
then
    die "pattern not specified; run with -h for help"
fi
pattern=$1
shift

if [[ $# == 0 ]]
then
    paths=.
else
    paths=$@
fi

checkfile() {
    local pattern=$(echo $1 | tr '.' '/')
    local path=$2
    if [[ $path != *.jar ]]
    then
        return
    fi
    local results=$(jar tf $path | grep $pattern)
    if [[ -n $results ]]
    then
        echo $path
        for result in $results
        do
            echo "    $result"
        done
    fi
}

checkdir() {
    local pattern=$1
    local path=$2
    for child in $path/*
    do
        check $pattern $child
    done
}

check() {
    local pattern=$1
    local path=$2
    if [[ -d $path ]]
    then
        checkdir $pattern $path
    else
        checkfile $pattern $path
    fi
}

for path in $paths
do
    check $pattern $path
#    for jar in $jars
#    do
#        echo '---' $jar
#        jar tf $jar | grep $search
#    done
done
