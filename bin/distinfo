#!/usr/bin/env bash

source $ME_FUNCTIONS

UNKNOWN=unknown

usage() {
    echo
    echo "USAGE"
    echo -e "\t$(basename $0) [options]"
    echo
    echo "DESCRIPTION"
    echo
    echo -e "\tdisplay the current system's distro info"
    echo
    echo -e "\twith no options, display <name>-<version>-<architecture>"
    echo
    echo -e "\tif a value is unknown, '$UNKNOWN' is used"
    echo
    echo "OPTIONS"
    echo
    echo -e "\t-a  display distro architecture"
    echo -e "\t-n  display distro name"
    echo -e "\t-v  display distro version"
    echo -e "\t-h  display this message"
    echo
}

get_vendor_name() {
    case $OSTYPE in
        cygwin)
            echo cygwin
            return
            ;;
        darwin*)
            echo darwin
            return
            ;;
        linux*)
            if grep "CentOS" /etc/issue > /dev/null ; then
                echo centos
                return
            fi
            if grep "Debian" /etc/issue > /dev/null ; then
                echo debian
                return
            fi
            if grep "Red Hat Enterprise Linux Server" /etc/issue > /dev/null ; then
                echo rhel
                return
            fi
            if grep "SUSE Linux Enterprise Server" /etc/issue > /dev/null ; then
                echo sles
                return
            fi
            if grep "Ubuntu .* LTS" /etc/issue > /dev/null ; then
                echo ubuntu
                return
            fi
            if which emerge > /dev/null 2>&1 ; then
                echo gentoo
                return
            fi
            ;;
        solaris*)
            echo solaris
            return
            ;;
    esac
    echo $UNKNOWN
}

get_vendor_version() {
    case $(get_vendor_name) in
        centos)
            head -1 /etc/issue | sed -e 's/CentOS .* \([0-9]*\)\.[0-9]* (.*)$/\1/'
            return
            ;;
        darwin)
            uname -r | cut -d'.' -f1
            return
            ;;
        win)
            case $(wmic os get name) in
                *Windows\ Server\ 2008*)
                    echo 2k8
                    return
                    ;;
                *Microsoft\ Windows\ 7*)
                    echo 7
                    return
                    ;;
            esac
            ;;
        debian)
            if grep "[[:digit:]]" /etc/issue > /dev/null ; then
                head -1 /etc/issue | sed -e 's/Debian .* \([0-9]*\) .*$/\1/'
            else
                echo 0
            fi
            return
            ;;
        gentoo)
            echo 0
            return
            ;;
        rhel)
            head -1 /etc/issue | sed -e 's/Red Hat .* \([0-9]*\)\.[0-9]* (.*)$/\1/'
            return
            ;;
        sles)
            head -2 /etc/issue | tail -1 | sed -e 's/.*SUSE Linux Enterprise Server \([0-9]*\) .*$/\1/'
            return
            ;;
        solaris)
            echo ${OSTYPE:9}  # "solaris2." is 9 chars
            #echo ${OSTYPE:$(expr length "solaris")}  # fails on 10
            return
            ;;
        ubuntu)
            head -1 /etc/issue | sed -e 's/Ubuntu \([^.]*\)\..*$/\1/'
            return
            ;;
    esac
    echo $UNKNOWN
}

get_vendor_arch() {
    case $OSTYPE in
        cygwin)
            echo x$(wmic cpu get datawidth | grep '[[:digit:]]')
            return
            ;;
        darwin* | linux*)
            case $(uname -m) in
                i686)
                    echo x32
                    return
                    ;;
                x86_64)
                    echo x64
                    return
                    ;;
            esac
            ;;
        solaris*)
            echo x$(isainfo -kv | sed -e 's/^\([0-9]*\).*/\1/')
            return
    esac
    echo $UNKNOWN
}

if [[ $# == 0 ]] ; then
    echo $(get_vendor_name)-$(get_vendor_version)-$(get_vendor_arch)
    exit
fi

while getopts ":anvh" opt ; do
    case $opt in
        a)
            get_vendor_arch
            ;;
        n)
            get_vendor_name
            ;;
        v)
            get_vendor_version
            ;;
        h)
            usage
            exit
            ;;
        \?)
            echo "invalid option $opt, run with -h for help" >&2
            exit 1
            ;;
    esac
done

# vim: et sw=4 sts=4
